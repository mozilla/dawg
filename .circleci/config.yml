version: 2.1

orbs:
  node: circleci/node@5.2.0
  gcp-cli: circleci/gcp-cli@3.1.1
executors:
  pw-jammy-development:
    docker:
      - image: mcr.microsoft.com/playwright:v1.45.1-jammy

jobs:
  setup:
    executor:
      name: pw-jammy-development
    steps:
      - restore_cache:
          keys:
            - &source-cache source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - save_cache:
          key: *source-cache
          paths:
            - '.git'
      - restore_cache:
          keys:
            - &package-cache npm-packages-{{ checksum "package-lock.json" }}
      - node/install-packages
      - save_cache:
          name: Save NPM Package Cache
          key: npm-packages-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: workspace
          paths:
            - ./

  lint:
    executor:
      name: pw-jammy-development
    steps:
      - run:
          command: npm run lint

  test-unit:
    executor:
      name: pw-jammy-development
    steps:
      - run: npm run build
      - run:
          command: npm run test:unit
      - store_test_results:
          path: ./test-results/unit-results.xml

  test-e2e:
    executor:
      name: pw-jammy-development
    steps:
      - run: npm run build -- --mode development --baseurl="/dawg/"
      - store_test_results:
          path: ./test-results/e2e-results.xml

  test-types:
    executor:
      name: pw-jammy-development
    steps:
      - run: npm run test:types

  build:
    executor:
      name: pw-jammy-development
    steps:
      - run:
          name: Build assets
          command: |
            npm run build -- --base="/dawg/"
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist

  artifact-deployment:
    executor: gcp-cli/google
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Prepare environment variables for OIDC authentication
          command: |
            echo 'export GOOGLE_PROJECT_ID="moz-fx-data-prot-nonprod-c3a1"' >> "$BASH_ENV"
            echo "export OIDC_WIP_ID=$GCPV2_WORKLOAD_IDENTITY_POOL_ID" >> "$BASH_ENV"
            echo "export OIDC_WIP_PROVIDER_ID=$GCPV2_CIRCLECI_WORKLOAD_IDENTITY_PROVIDER" >> "$BASH_ENV"
            echo "export GOOGLE_PROJECT_NUMBER=$GCPV2_WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER" >> "$BASH_ENV"
            echo "export OIDC_SERVICE_ACCOUNT_EMAIL=$GCP_SERVICE_ACCOUNT_EMAIL" >> "$BASH_ENV"
      - gcp-cli/setup:
          use_oidc: true
      - run:
          name: Upload artifacts
          command: |
            gsutil rsync -r -x "gcpv.*\.json" ~/project/dist gs://moz-fx-data-prot-nonprod-c3a1-protodash/dawg/static

workflows:
  ci:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test-types:
          requires:
            - setup
      - test-unit:
          requires:
            - setup
      - test-e2e:
          requires:
            - setup
      - build:
          requires:
            - setup
  deploy:
    jobs:
      - setup
      - build:
          requires:
            - setup
          filters:
            branches:
              only:
                - main
      - artifact-deployment:
          name: Deploy static website
          context: gcpv2-workload-identity
          requires:
            - build
          filters:
            branches:
              only:
                - main
